// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceField.Server.Data;

#nullable disable

namespace ServiceField.Server.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServiceField.Server.Models.LuServiceCaseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LuServiceCaseCategories");
                });

            modelBuilder.Entity("ServiceField.Server.Models.LuServiceObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LuServiceObjects");
                });

            modelBuilder.Entity("ServiceField.Server.Models.MDCheckList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MDCheckLists");
                });

            modelBuilder.Entity("ServiceField.Server.Models.MDElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MDElements");
                });

            modelBuilder.Entity("ServiceField.Server.Models.MDSkills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MDSkills");
                });

            modelBuilder.Entity("ServiceField.Server.Models.ServiceCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AffectedCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AffectedInstallation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryFK")
                        .HasColumnType("int");

                    b.Property<int>("CheckListFK")
                        .HasColumnType("int");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ElementFK")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObjectFK")
                        .HasColumnType("int");

                    b.Property<string>("OriginatingSOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductSerialNumber")
                        .HasColumnType("int");

                    b.Property<string>("ResponsableUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCaseStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillsFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryFK");

                    b.HasIndex("CheckListFK");

                    b.HasIndex("ElementFK");

                    b.HasIndex("ObjectFK");

                    b.HasIndex("SkillsFK");

                    b.ToTable("ServiceCases");
                });

            modelBuilder.Entity("ServiceField.Server.Models.ServiceCase", b =>
                {
                    b.HasOne("ServiceField.Server.Models.LuServiceCaseCategory", "LuServiceCaseCategory")
                        .WithMany("ServiceCases")
                        .HasForeignKey("CategoryFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiceField.Server.Models.MDCheckList", "MDCheckList")
                        .WithMany("ServiceCases")
                        .HasForeignKey("CheckListFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiceField.Server.Models.MDElement", "MDElement")
                        .WithMany("ServiceCases")
                        .HasForeignKey("ElementFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiceField.Server.Models.LuServiceObject", "LuServiceObject")
                        .WithMany("ServiceCases")
                        .HasForeignKey("ObjectFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiceField.Server.Models.MDSkills", "MDSkills")
                        .WithMany("ServiceCases")
                        .HasForeignKey("SkillsFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LuServiceCaseCategory");

                    b.Navigation("LuServiceObject");

                    b.Navigation("MDCheckList");

                    b.Navigation("MDElement");

                    b.Navigation("MDSkills");
                });

            modelBuilder.Entity("ServiceField.Server.Models.LuServiceCaseCategory", b =>
                {
                    b.Navigation("ServiceCases");
                });

            modelBuilder.Entity("ServiceField.Server.Models.LuServiceObject", b =>
                {
                    b.Navigation("ServiceCases");
                });

            modelBuilder.Entity("ServiceField.Server.Models.MDCheckList", b =>
                {
                    b.Navigation("ServiceCases");
                });

            modelBuilder.Entity("ServiceField.Server.Models.MDElement", b =>
                {
                    b.Navigation("ServiceCases");
                });

            modelBuilder.Entity("ServiceField.Server.Models.MDSkills", b =>
                {
                    b.Navigation("ServiceCases");
                });
#pragma warning restore 612, 618
        }
    }
}
